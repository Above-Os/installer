
 _____                    _                 
/__   \___ _ __ _ __ ___ (_)_ __  _   _ ___ 
  / /\/ _ \ '__| '_ ` _ \| | '_ \| | | / __|
 / / |  __/ |  | | | | | | | | | | |_| \__ \
 \/   \___|_|  |_| |_| |_|_|_| |_|\__,_|___/
                                            

2024-07-08T22:51:50.939-0700	current user: root
2024-07-08T22:51:50.948-0700	[Job] [Startup] start ...
2024-07-08T22:51:50.948-0700	[Module] GetMachineInfo
2024-07-08T22:51:50.948-0700	[A] LocalHost: GetMachineInfo
2024-07-08T22:51:50.952-0700	[A] LocalHost: GetMachineInfo success (4.697056ms)
2024-07-08T22:51:50.952-0700	[A] LocalHost: GetCgroupsEnabled
MACHINE, hostname: zhaoyu, cpu: 14, mem: 30.98 GB, disk: 937.33 GB, local-ip: 
SYSTEM, os: linux, platform: ubuntu, arch: amd64, version: 22.04
CGROUP, cpu-enabled: 1, memory-enabled: 1
2024-07-08T22:51:50.952-0700	[A] LocalHost: GetCgroupsEnabled success (71.224µs)
2024-07-08T22:51:50.952-0700	[A] LocalHost: GetLocalIp
2024-07-08T22:51:50.953-0700	[A] LocalHost: GetLocalIp success (166.24µs)
2024-07-08T22:51:50.953-0700	[Module] CopyScripts
2024-07-08T22:51:50.953-0700	[A] LocalHost: CopyScripts
2024-07-08T22:51:50.953-0700	[A] LocalHost: CopyScripts success (284.203µs)
2024-07-08T22:51:50.953-0700	[A] LocalHost: Greeting
2024-07-08T22:51:50.965-0700	script CMD: /project/scripts/greeting.sh, OUTPUT: 
ubuntu
test script greetings
lsb_dist=ubuntu
BASE_DIR=/project/scripts
2024-07-08T22:51:50.965-0700	[A] LocalHost: Greeting success (12.369726ms)
2024-07-08T22:51:50.965-0700	[Job] Startup execute successfully!!! (17.744694ms)
2024-07-08T22:52:16.065-0700	[Job] [Install Terminus] start ...
2024-07-08T22:52:16.065-0700	[Module] TerminusGreeting
2024-07-08T22:52:16.065-0700	[A] LocalHost: Greetings
2024-07-08T22:52:16.066-0700	[A] LocalHost: Greetings success (1.29429ms)
2024-07-08T22:52:16.066-0700	[Module] SaveInstallConfig
2024-07-08T22:52:16.066-0700	[A] LocalHost: Save
2024-07-08T22:52:16.092-0700	[A] LocalHost: Save success (25.951304ms)
2024-07-08T22:52:16.092-0700	[Module] GreetingsModule
2024-07-08T22:52:16.384-0700	[A] Remote: Greetings
2024-07-08T22:52:16.396-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "echo 'Greetings, KubeKey!!!!! hahahaha!!!!'", OUTPUT: 
Greetings, KubeKey!!!!! hahahaha!!!!
2024-07-08T22:52:16.396-0700	[A] zhaoyu: Greetings success (303.766093ms)
2024-07-08T22:52:16.396-0700	[Module] K3sNodeBinariesModule
2024-07-08T22:52:16.396-0700	[A] LocalHost: DownloadBinaries
---helm zone / 1--- 
---helm url / 2--- https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz
2024-07-08T22:52:18.595-0700	get file k3s size: 49.69 MB
2024-07-08T22:52:36.622-0700	k3s download succeeded
2024-07-08T22:52:37.537-0700	get file helm size: 13.31 MB
---untarCmd / 1--- cd /project/pkg/helm/v3.9.0/amd64 && tar -zxf helm-v3.9.0-linux-amd64.tar.gz && mv linux-amd64/helm . && rm -rf *linux-amd64*
---untarCmd / 5--- exit status 2
2024-07-08T22:52:42.692-0700	decompression failed: exit status 2
2024-07-08T22:52:43.894-0700	get file helm size: 13.31 MB
---untarCmd / 1--- cd /project/pkg/helm/v3.9.0/amd64 && tar -zxf helm-v3.9.0-linux-amd64.tar.gz && mv linux-amd64/helm . && rm -rf *linux-amd64*
---untarCmd / 5--- exit status 2
2024-07-08T22:52:44.714-0700	decompression failed: exit status 2
2024-07-08T22:52:45.934-0700	get file helm size: 13.31 MB
---untarCmd / 1--- cd /project/pkg/helm/v3.9.0/amd64 && tar -zxf helm-v3.9.0-linux-amd64.tar.gz && mv linux-amd64/helm . && rm -rf *linux-amd64*
---untarCmd / 5--- exit status 2
2024-07-08T22:52:46.660-0700	decompression failed: exit status 2
2024-07-08T22:52:47.881-0700	get file helm size: 13.31 MB
---untarCmd / 1--- cd /project/pkg/helm/v3.9.0/amd64 && tar -zxf helm-v3.9.0-linux-amd64.tar.gz && mv linux-amd64/helm . && rm -rf *linux-amd64*
---untarCmd / 5--- exit status 2
2024-07-08T22:52:48.810-0700	decompression failed: exit status 2
2024-07-08T22:52:50.032-0700	get file helm size: 13.31 MB
---untarCmd / 1--- cd /project/pkg/helm/v3.9.0/amd64 && tar -zxf helm-v3.9.0-linux-amd64.tar.gz && mv linux-amd64/helm . && rm -rf *linux-amd64*
---untarCmd / 5--- exit status 2
2024-07-08T22:52:50.864-0700	decompression failed: exit status 2
2024-07-08T22:52:53.205-0700	get file cni-plugins-linux-amd64-v0.9.1.tgz size: 37.93 MB
2024-07-08T22:53:06.004-0700	cni-plugins-linux-amd64-v0.9.1.tgz download succeeded
2024-07-08T22:53:07.237-0700	get file etcd-v3.4.13-linux-amd64.tar.gz size: 16.57 MB
2024-07-08T22:53:14.603-0700	etcd-v3.4.13-linux-amd64.tar.gz download succeeded
2024-07-08T22:53:14.603-0700	[A] LocalHost: DownloadBinaries success (58.207291313s)
2024-07-08T22:53:14.603-0700	[Module] ConfigureOSModule
2024-07-08T22:53:14.604-0700	[A] Remote: GetOSData
---1--- PRETTY_NAME="Ubuntu 22.04.2 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.2 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=jammy
2024-07-08T22:53:14.612-0700	[A] zhaoyu: GetOSData success (8.731373ms)
2024-07-08T22:53:14.612-0700	[A] Remote: InitOS
2024-07-08T22:53:14.913-0700	[A] zhaoyu: InitOS success (300.268944ms)
2024-07-08T22:53:14.913-0700	[A] Remote: GenerateScript
2024-07-08T22:53:14.932-0700	scp local file /project/pkg/zhaoyu/initOS.sh to remote /tmp/kubekey/usr/local/bin/kube-scripts/initOS.sh success
2024-07-08T22:53:14.954-0700	[A] zhaoyu: GenerateScript success (41.669189ms)
2024-07-08T22:53:14.954-0700	[A] Remote: ExecScript
2024-07-08T22:53:15.587-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kube-scripts/initOS.sh", OUTPUT: 
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-arptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_local_reserved_ports = 30000-32767
vm.max_map_count = 262144
vm.swappiness = 1
fs.inotify.max_user_instances = 524288
kernel.pid_max = 65535
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_max_tw_buckets = 32768
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_keepalive_time = 1800
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_fin_timeout = 10
vm.overcommit_memory = 1
net.core.somaxconn = 10240
2024-07-08T22:53:15.587-0700	[A] zhaoyu: ExecScript success (633.027304ms)
2024-07-08T22:53:15.587-0700	[A] zhaoyu: ConfigureNtpServer skipped (26.238µs)
2024-07-08T22:53:15.587-0700	[Module] StatusModule
2024-07-08T22:53:15.587-0700	[A] Remote: GetClusterStatus(k3s)
2024-07-08T22:53:15.607-0700	check remote file exist: false
2024-07-08T22:53:15.607-0700	[A] zhaoyu: GetClusterStatus(k3s) success (19.550499ms)
2024-07-08T22:53:15.607-0700	[Module] ETCDPreCheckModule
2024-07-08T22:53:15.607-0700	[A] Remote: GetETCDStatus
2024-07-08T22:53:15.619-0700	check remote file exist: false
2024-07-08T22:53:15.619-0700	[A] zhaoyu: GetETCDStatus success (12.461786ms)
2024-07-08T22:53:15.619-0700	[Module] CertsModule
2024-07-08T22:53:15.619-0700	[A] Remote: FetchETCDCerts
2024-07-08T22:53:15.620-0700	[A] zhaoyu: FetchETCDCerts success (35.967µs)
2024-07-08T22:53:15.620-0700	[A] LocalHost: GenerateETCDCerts
[certs] Generating "ca" certificate and key
[certs] admin-zhaoyu serving cert is signed for DNS names [etcd etcd.kube-system etcd.kube-system.svc etcd.kube-system.svc.cluster.local lb.kubesphere.local localhost zhaoyu] and IPs [127.0.0.1 ::1 192.168.50.187]
[certs] member-zhaoyu serving cert is signed for DNS names [etcd etcd.kube-system etcd.kube-system.svc etcd.kube-system.svc.cluster.local lb.kubesphere.local localhost zhaoyu] and IPs [127.0.0.1 ::1 192.168.50.187]
[certs] node-zhaoyu serving cert is signed for DNS names [etcd etcd.kube-system etcd.kube-system.svc etcd.kube-system.svc.cluster.local lb.kubesphere.local localhost zhaoyu] and IPs [127.0.0.1 ::1 192.168.50.187]
2024-07-08T22:53:16.029-0700	[A] LocalHost: GenerateETCDCerts success (409.613547ms)
2024-07-08T22:53:16.029-0700	[A] Remote: SyncCertsFile
2024-07-08T22:53:16.063-0700	scp local file /project/pkg/pki/etcd/ca.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/ca.pem success
2024-07-08T22:53:16.138-0700	scp local file /project/pkg/pki/etcd/ca-key.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/ca-key.pem success
2024-07-08T22:53:16.200-0700	scp local file /project/pkg/pki/etcd/admin-zhaoyu.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/admin-zhaoyu.pem success
2024-07-08T22:53:16.259-0700	scp local file /project/pkg/pki/etcd/admin-zhaoyu-key.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/admin-zhaoyu-key.pem success
2024-07-08T22:53:16.326-0700	scp local file /project/pkg/pki/etcd/member-zhaoyu.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/member-zhaoyu.pem success
2024-07-08T22:53:16.392-0700	scp local file /project/pkg/pki/etcd/member-zhaoyu-key.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/member-zhaoyu-key.pem success
2024-07-08T22:53:16.459-0700	scp local file /project/pkg/pki/etcd/node-zhaoyu.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/node-zhaoyu.pem success
2024-07-08T22:53:16.524-0700	scp local file /project/pkg/pki/etcd/node-zhaoyu-key.pem to remote /tmp/kubekey/etc/ssl/etcd/ssl/node-zhaoyu-key.pem success
2024-07-08T22:53:16.561-0700	[A] zhaoyu: SyncCertsFile success (532.194757ms)
2024-07-08T22:53:16.561-0700	[A] zhaoyu: SyncCertsFileToMaster skipped (29.144µs)
2024-07-08T22:53:16.561-0700	[Module] InstallETCDBinaryModule
2024-07-08T22:53:16.561-0700	[A] Remote: InstallETCDBinary
2024-07-08T22:53:16.699-0700	scp local file /project/pkg/etcd/v3.4.13/amd64/etcd-v3.4.13-linux-amd64.tar.gz to remote /tmp/kubekey/etcd-v3.4.13-linux-amd64.tar.gz success
2024-07-08T22:53:17.023-0700	[A] zhaoyu: InstallETCDBinary success (461.131122ms)
2024-07-08T22:53:17.023-0700	[A] Remote: GenerateETCDService
2024-07-08T22:53:17.054-0700	scp local file /project/pkg/zhaoyu/etcd.service to remote /tmp/kubekey/etc/systemd/system/etcd.service success
2024-07-08T22:53:17.093-0700	[A] zhaoyu: GenerateETCDService success (70.446859ms)
2024-07-08T22:53:17.093-0700	[A] Remote: GenerateAccessAddress
2024-07-08T22:53:17.093-0700	[A] zhaoyu: GenerateAccessAddress success (50.84µs)
2024-07-08T22:53:17.093-0700	[Module] ETCDConfigureModule
2024-07-08T22:53:17.093-0700	[A] zhaoyu: ExistETCDHealthCheck skipped (11.769µs)
2024-07-08T22:53:17.093-0700	[A] Remote: GenerateETCDConfig
2024-07-08T22:53:17.117-0700	scp local file /project/pkg/zhaoyu/etcd.env to remote /tmp/kubekey/etc/etcd.env success
2024-07-08T22:53:17.139-0700	[A] zhaoyu: GenerateETCDConfig success (45.355059ms)
2024-07-08T22:53:17.139-0700	[A] Remote: AllRefreshETCDConfig
2024-07-08T22:53:17.156-0700	scp local file /project/pkg/zhaoyu/etcd.env to remote /tmp/kubekey/etc/etcd.env success
2024-07-08T22:53:17.184-0700	[A] zhaoyu: AllRefreshETCDConfig success (45.374107ms)
2024-07-08T22:53:17.184-0700	[A] Remote: RestartETCD
2024-07-08T22:53:20.597-0700	[A] zhaoyu: RestartETCD success (3.412536864s)
2024-07-08T22:53:20.597-0700	[A] Remote: AllETCDNodeHealthCheck
2024-07-08T22:53:20.621-0700	[A] zhaoyu: AllETCDNodeHealthCheck success (24.582229ms)
2024-07-08T22:53:20.621-0700	[A] Remote: RefreshETCDConfigToExist
2024-07-08T22:53:20.642-0700	scp local file /project/pkg/zhaoyu/etcd.env to remote /tmp/kubekey/etc/etcd.env success
2024-07-08T22:53:20.663-0700	[A] zhaoyu: RefreshETCDConfigToExist success (41.342568ms)
2024-07-08T22:53:20.663-0700	[A] Remote: AllETCDNodeHealthCheck
2024-07-08T22:53:20.681-0700	[A] zhaoyu: AllETCDNodeHealthCheck success (18.381143ms)
2024-07-08T22:53:20.681-0700	[Module] ETCDBackupModule
2024-07-08T22:53:20.681-0700	[A] Remote: BackupETCD
2024-07-08T22:53:20.699-0700	scp local file /project/pkg/zhaoyu/etcd-backup.sh to remote /tmp/kubekey/usr/local/bin/kube-scripts/etcd-backup.sh success
2024-07-08T22:53:20.727-0700	[A] zhaoyu: BackupETCD success (46.007037ms)
2024-07-08T22:53:20.727-0700	[A] Remote: GenerateBackupETCDService
2024-07-08T22:53:20.758-0700	scp local file /project/pkg/zhaoyu/backup-etcd.service to remote /tmp/kubekey/etc/systemd/system/backup-etcd.service success
2024-07-08T22:53:20.783-0700	[A] zhaoyu: GenerateBackupETCDService success (56.26198ms)
2024-07-08T22:53:20.783-0700	[A] Remote: GenerateBackupETCDTimer
2024-07-08T22:53:20.801-0700	scp local file /project/pkg/zhaoyu/backup-etcd.timer to remote /tmp/kubekey/etc/systemd/system/backup-etcd.timer success
2024-07-08T22:53:20.822-0700	[A] zhaoyu: GenerateBackupETCDTimer success (38.902243ms)
2024-07-08T22:53:20.822-0700	[A] Remote: EnableBackupETCDService
2024-07-08T22:53:20.980-0700	[A] zhaoyu: EnableBackupETCDService success (158.212596ms)
2024-07-08T22:53:20.981-0700	[Module] InstallKubeBinariesModule
2024-07-08T22:53:20.981-0700	[A] Remote: SyncKubeBinary(k3s)
2024-07-08T22:53:20.989-0700	SyncKubeBinary cp k3s from /project/pkg/kube/v1.22.16/amd64/k3s to /usr/local/bin/k3s

2024-07-08T22:53:21.276-0700	scp local file /project/pkg/kube/v1.22.16/amd64/k3s to remote /tmp/kubekey/usr/local/bin/k3s success
2024-07-08T22:53:21.313-0700	SyncKubeBinary cp helm from /project/pkg/helm/v3.9.0/amd64/helm to /usr/local/bin/helm

2024-07-08T22:53:21.422-0700	scp local file /project/pkg/helm/v3.9.0/amd64/helm to remote /tmp/kubekey/usr/local/bin/helm success
2024-07-08T22:53:21.459-0700	SyncKubeBinary cp kubecni from /project/pkg/cni/v0.9.1/amd64/cni-plugins-linux-amd64-v0.9.1.tgz to /tmp/kubekey/cni-plugins-linux-amd64-v0.9.1.tgz

2024-07-08T22:53:21.690-0700	scp local file /project/pkg/cni/v0.9.1/amd64/cni-plugins-linux-amd64-v0.9.1.tgz to remote /tmp/kubekey/cni-plugins-linux-amd64-v0.9.1.tgz success
2024-07-08T22:53:22.149-0700	[A] zhaoyu: SyncKubeBinary(k3s) success (1.168360422s)
2024-07-08T22:53:22.149-0700	[A] Remote: GenerateK3sKillAllScript
2024-07-08T22:53:22.177-0700	scp local file /project/pkg/zhaoyu/k3s-killall.sh to remote /tmp/kubekey/usr/local/bin/k3s-killall.sh success
2024-07-08T22:53:22.204-0700	[A] zhaoyu: GenerateK3sKillAllScript success (54.972965ms)
2024-07-08T22:53:22.204-0700	[A] Remote: GenerateK3sUninstallScript
2024-07-08T22:53:22.222-0700	scp local file /project/pkg/zhaoyu/k3s-uninstall.sh to remote /tmp/kubekey/usr/local/bin/k3s-uninstall.sh success
2024-07-08T22:53:22.244-0700	[A] zhaoyu: GenerateK3sUninstallScript success (39.793171ms)
2024-07-08T22:53:22.244-0700	[A] Remote: ChmodScript(k3s)
2024-07-08T22:53:22.257-0700	[A] zhaoyu: ChmodScript(k3s) success (13.674683ms)
2024-07-08T22:53:22.257-0700	[Module] K3sInitClusterModule
2024-07-08T22:53:22.257-0700	[A] Remote: GenerateK3sService
2024-07-08T22:53:22.261-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:22.279-0700	scp local file /project/pkg/zhaoyu/k3s.service to remote /tmp/kubekey/etc/systemd/system/k3s.service success
2024-07-08T22:53:22.319-0700	scp local file /project/pkg/zhaoyu/kubelet.config to remote /tmp/kubekey/etc/rancher/k3s/kubelet.config success
2024-07-08T22:53:22.343-0700	[A] zhaoyu: GenerateK3sService success (85.253804ms)
2024-07-08T22:53:22.343-0700	[A] Remote: GenerateK3sServiceEnv
2024-07-08T22:53:22.362-0700	scp local file /project/pkg/zhaoyu/k3s.service.env to remote /tmp/kubekey/etc/systemd/system/k3s.service.env success
2024-07-08T22:53:22.384-0700	[A] zhaoyu: GenerateK3sServiceEnv success (41.214678ms)
2024-07-08T22:53:22.384-0700	[A] Remote: GenerateK3sRegistryConfig
2024-07-08T22:53:22.404-0700	scp local file /project/pkg/zhaoyu/registries.yaml to remote /tmp/kubekey/etc/rancher/k3s/registries.yaml success
2024-07-08T22:53:22.425-0700	[A] zhaoyu: GenerateK3sRegistryConfig success (41.486293ms)
2024-07-08T22:53:22.425-0700	[A] Remote: EnableK3sService
2024-07-08T22:53:26.938-0700	[A] zhaoyu: EnableK3sService success (4.512789073s)
2024-07-08T22:53:26.938-0700	[A] Remote: PreloadImagesService
2024-07-08T22:53:26.938-0700	[A] zhaoyu: PreloadImagesService success (96.367µs)
2024-07-08T22:53:26.939-0700	[A] Remote: CopyKubeConfig
2024-07-08T22:53:26.984-0700	[A] zhaoyu: CopyKubeConfig success (45.626282ms)
2024-07-08T22:53:26.984-0700	[A] zhaoyu: AddMasterTaint(k3s) skipped (35.981µs)
2024-07-08T22:53:26.984-0700	[A] Remote: AddWorkerLabel
2024-07-08T22:53:27.134-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl label --overwrite node zhaoyu node-role.kubernetes.io/worker=", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl label --overwrite node zhaoyu node-role.kubernetes.io/worker=" 
Error from server (NotFound): nodes "zhaoyu" not found: Process exited with status 1
2024-07-08T22:53:27.134-0700	zhaoyu add master NoSchedule taint failed: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl label --overwrite node zhaoyu node-role.kubernetes.io/worker=" 
Error from server (NotFound): nodes "zhaoyu" not found: Process exited with status 1
AddWorkerLabel successed: node/zhaoyu labeled
2024-07-08T22:53:37.312-0700	[A] zhaoyu: AddWorkerLabel success (10.327345761s)
2024-07-08T22:53:37.312-0700	[Module] StatusModule
2024-07-08T22:53:37.312-0700	[A] Remote: GetClusterStatus(k3s)
2024-07-08T22:53:37.321-0700	check remote file exist: true
2024-07-08T22:53:37.327-0700	[exec] zhaoyu CMD: k3s --version | grep 'k3s' | awk '{print $3}', OUTPUT: 
v1.22.16+k3s1
2024-07-08T22:53:37.341-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "cat /var/lib/rancher/k3s/server/node-token", OUTPUT: 
K1091a8776630038c874d367d2bf48f7499537d6e3de54122768db2176e7d6fca1e::server:c7dc070a8f4546195eaa20c69c39f9db
2024-07-08T22:53:37.480-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl --no-headers=true get nodes -o custom-columns=:metadata.name,:status.nodeInfo.kubeletVersion,:status.addresses", OUTPUT: 
zhaoyu   v1.22.16+k3s1   [map[address:192.168.50.187 type:InternalIP] map[address:zhaoyu type:Hostname]]
2024-07-08T22:53:37.480-0700	[A] zhaoyu: GetClusterStatus(k3s) success (168.707655ms)
2024-07-08T22:53:37.480-0700	[Module] K3sJoinNodesModule
2024-07-08T22:53:37.480-0700	[A] zhaoyu: GenerateK3sService skipped (18.992µs)
2024-07-08T22:53:37.480-0700	[A] zhaoyu: GenerateK3sServiceEnv skipped (5.245µs)
2024-07-08T22:53:37.480-0700	[A] zhaoyu: GenerateK3sRegistryConfig skipped (4.795µs)
2024-07-08T22:53:37.480-0700	[A] zhaoyu: EnableK3sService skipped (9.244µs)
2024-07-08T22:53:37.480-0700	[A] Remote: PreloadImagesService
2024-07-08T22:53:37.480-0700	[A] zhaoyu: PreloadImagesService success (16.42µs)
2024-07-08T22:53:37.480-0700	[A] zhaoyu: CopyKubeConfig skipped (4.101µs)
2024-07-08T22:53:37.481-0700	[A] zhaoyu: SyncKubeConfigToWorker(k3s) skipped (5.14µs)
2024-07-08T22:53:37.481-0700	[A] zhaoyu: AddMasterTaint(k3s) skipped (4.397µs)
2024-07-08T22:53:37.481-0700	[A] zhaoyu: AddWorkerLabel skipped (4.128µs)
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:37.481-0700	[Module] DeployNetworkPluginModule
2024-07-08T22:53:37.481-0700	[A] Remote: GenerateCalico
2024-07-08T22:53:37.502-0700	scp local file /project/pkg/zhaoyu/network-plugin.yaml to remote /tmp/kubekey/etc/kubernetes/network-plugin.yaml success
2024-07-08T22:53:37.523-0700	[A] zhaoyu: GenerateCalico success (42.512484ms)
2024-07-08T22:53:37.523-0700	[A] Remote: DeployCalico
2024-07-08T22:53:38.236-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl apply -f /etc/kubernetes/network-plugin.yaml --force", OUTPUT: 
configmap/calico-config created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrole.rbac.authorization.k8s.io/calico-node created
clusterrolebinding.rbac.authorization.k8s.io/calico-node created
daemonset.apps/calico-node created
serviceaccount/calico-node created
deployment.apps/calico-kube-controllers created
serviceaccount/calico-kube-controllers created
poddisruptionbudget.policy/calico-kube-controllers created
2024-07-08T22:53:38.236-0700	[A] zhaoyu: DeployCalico success (712.799252ms)
2024-07-08T22:53:38.237-0700	[Module] ConfigureKubernetesModule
2024-07-08T22:53:38.237-0700	[A] Remote: ConfigureKubernetes
2024-07-08T22:53:38.237-0700	[A] zhaoyu: ConfigureKubernetes success (47.237µs)
2024-07-08T22:53:38.237-0700	[Module] ChownModule
2024-07-08T22:53:38.237-0700	[A] Remote: ChownFileAndDir
2024-07-08T22:53:38.248-0700	check remote file exist: true
2024-07-08T22:53:38.262-0700	[A] zhaoyu: ChownFileAndDir success (24.674838ms)
2024-07-08T22:53:38.262-0700	[Module] AutoRenewCertsModule
2024-07-08T22:53:38.262-0700	[A] Remote: GenerateK8sCertsRenewScript
2024-07-08T22:53:38.280-0700	scp local file /project/pkg/zhaoyu/k8s-certs-renew.sh to remote /tmp/kubekey/usr/local/bin/kube-scripts/k8s-certs-renew.sh success
2024-07-08T22:53:38.301-0700	[A] zhaoyu: GenerateK8sCertsRenewScript success (39.338042ms)
2024-07-08T22:53:38.301-0700	[A] Remote: GenerateK8sCertsRenewService
2024-07-08T22:53:38.319-0700	scp local file /project/pkg/zhaoyu/k8s-certs-renew.service to remote /tmp/kubekey/etc/systemd/system/k8s-certs-renew.service success
2024-07-08T22:53:38.342-0700	[A] zhaoyu: GenerateK8sCertsRenewService success (40.594937ms)
2024-07-08T22:53:38.342-0700	[A] Remote: GenerateK8sCertsRenewTimer
2024-07-08T22:53:38.361-0700	scp local file /project/pkg/zhaoyu/k8s-certs-renew.timer to remote /tmp/kubekey/etc/systemd/system/k8s-certs-renew.timer success
2024-07-08T22:53:38.382-0700	[A] zhaoyu: GenerateK8sCertsRenewTimer success (40.431219ms)
2024-07-08T22:53:38.382-0700	[A] Remote: EnableK8sCertsRenewService
2024-07-08T22:53:38.570-0700	[A] zhaoyu: EnableK8sCertsRenewService success (187.934425ms)
2024-07-08T22:53:38.570-0700	[Module] SaveKubeConfigModule
2024-07-08T22:53:38.570-0700	[A] LocalHost: SaveKubeConfig(k3s)
2024-07-08T22:53:38.584-0700	[A] LocalHost: SaveKubeConfig(k3s) success (13.511022ms)
2024-07-08T22:53:38.585-0700	[Module] AddonsModule
2024-07-08T22:53:38.585-0700	[A] LocalHost: InstallAddons
2024-07-08T22:53:38.585-0700	[A] LocalHost: InstallAddons success (21.801µs)
2024-07-08T22:53:38.585-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:38.585-0700	pauseTag: 3.5, corednsTag: 1.8.0
2024-07-08T22:53:38.585-0700	[Module] DeployStorageClassModule

##########################################
# 这里也涉及到拷贝文件
##########################################
2024-07-08T22:53:38.732-0700	[A] Remote: GenerateOpenEBSManifest
2024-07-08T22:53:38.761-0700	scp local file /project/pkg/zhaoyu/local-volume.yaml to remote /tmp/kubekey/etc/kubernetes/addons/local-volume.yaml success
2024-07-08T22:53:38.783-0700	[A] zhaoyu: GenerateOpenEBSManifest success (197.761077ms)
2024-07-08T22:53:38.921-0700	[A] Remote: DeployOpenEBS
2024-07-08T22:53:39.129-0700	[A] zhaoyu: DeployOpenEBS success (346.219864ms)
2024-07-08T22:53:39.129-0700	[Module] DeployKubeSphereModule

##################################################################
# GenerateKsInstallerCRD
# 拷贝 kubesphere.yaml；这里包括两部，render 和 scp
##################################################################
2024-07-08T22:53:39.129-0700	[A] Remote: GenerateKsInstallerCRD
2024-07-08T22:53:39.149-0700	scp local file /project/pkg/zhaoyu/kubesphere.yaml to remote /tmp/kubekey/etc/kubernetes/addons/kubesphere.yaml success
2024-07-08T22:53:39.171-0700	[A] zhaoyu: GenerateKsInstallerCRD success (41.855903ms)

##################################################################
# ApplyKsInstaller
# 执行 kubesphere.yaml
##################################################################
2024-07-08T22:53:39.171-0700	[A] Remote: ApplyKsInstaller
2024-07-08T22:53:39.741-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl apply -f /etc/kubernetes/addons/kubesphere.yaml --force", OUTPUT: 
namespace/kubesphere-system created
serviceaccount/ks-installer created
customresourcedefinition.apiextensions.k8s.io/clusterconfigurations.installer.kubesphere.io created
clusterrole.rbac.authorization.k8s.io/ks-installer created
clusterrolebinding.rbac.authorization.k8s.io/ks-installer created   ------->>> 这里是权限相关的
deployment.apps/ks-installer created
2024-07-08T22:53:39.741-0700	[A] zhaoyu: ApplyKsInstaller success (569.964857ms)
2024-07-08T22:53:39.741-0700	[A] Remote: AddKsInstallerConfig                      ------>>> 这个是干嘛的？
2024-07-08T22:53:39.749-0700	[A] zhaoyu: AddKsInstallerConfig success (8.369611ms)
2024-07-08T22:53:39.749-0700	[A] Remote: CreateKubeSphereNamespace                 ------>>> 这个是干嘛的？
2024-07-08T22:53:39.937-0700	[A] zhaoyu: CreateKubeSphereNamespace success (188.080299ms)
2024-07-08T22:53:39.937-0700	[A] Remote: SetupKsInstallerConfig                    ------>>> 就这？
2024-07-08T22:53:40.083-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl -n kubesphere-monitoring-system create secret generic kube-etcd-client-certs --from-file=etcd-client-ca.crt=/etc/ssl/etcd/ssl/ca.pem --from-file=etcd-client.crt=/etc/ssl/etcd/ssl/node-zhaoyu.pem --from-file=etcd-client.key=/etc/ssl/etcd/ssl/node-zhaoyu-key.pem", OUTPUT: 
secret/kube-etcd-client-certs created
2024-07-08T22:53:40.121-0700	[A] zhaoyu: SetupKsInstallerConfig success (183.511701ms)


####################################################################################################
#
#  ApplyKsInstaller
# 
####################################################################################################
2024-07-08T22:53:40.121-0700	[A] Remote: ApplyKsInstaller      ------->>> 这个 action 执行了两次？？？？
2024-07-08T22:53:42.719-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl apply -f /etc/kubernetes/addons/kubesphere.yaml --force", OUTPUT: 
namespace/kubesphere-system unchanged
serviceaccount/ks-installer unchanged
customresourcedefinition.apiextensions.k8s.io/clusterconfigurations.installer.kubesphere.io unchanged
clusterrole.rbac.authorization.k8s.io/ks-installer unchanged
clusterrolebinding.rbac.authorization.k8s.io/ks-installer unchanged
deployment.apps/ks-installer unchanged
clusterconfiguration.installer.kubesphere.io/ks-installer created         --------->>> 这里有区别
2024-07-08T22:53:42.720-0700	[A] zhaoyu: ApplyKsInstaller success (2.59855749s)




####################################################################################################
#
#  CheckKsInstallerResult
# 
####################################################################################################
2024-07-08T22:53:42.720-0700	[Module] CheckResultModule
2024-07-08T22:53:42.720-0700	[A] Remote: CheckKsInstallerResult
2024-07-08T22:53:48.024-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:53:53.321-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:53:58.623-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:03.920-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:09.215-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:14.511-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:19.799-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:25.117-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:30.425-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:35.730-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:41.061-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:46.368-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:51.656-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:54:56.948-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:55:02.245-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
Error from server (BadRequest): pod ks-installer-7c978cbb64-5hf4q does not have a host assigned: Process exited with status 1
2024-07-08T22:55:07.545-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:12.857-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:18.167-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:23.465-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:28.753-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:34.074-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:39.383-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:44.682-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:49.983-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:55:55.278-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:00.611-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:05.924-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:11.237-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:16.550-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:21.849-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:27.154-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:32.458-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:37.765-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
2024-07-08T22:56:43.064-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
error: unable to upgrade connection: container not found ("installer"): Process exited with status 1
start to sync ks-installer's log2024-07-08T22:56:44-07:00 INFO     : shell-operator latest
2024-07-08T22:56:44-07:00 INFO     : HTTP SERVER Listening on 0.0.0.0:9115
2024-07-08T22:56:44-07:00 INFO     : Use temporary dir: /tmp/shell-operator
2024-07-08T22:56:44-07:00 INFO     : Initialize hooks manager ...
2024-07-08T22:56:44-07:00 INFO     : Search and load hooks ...
2024-07-08T22:56:44-07:00 INFO     : Load hook config from '/hooks/kubesphere/installRunner.py'
2024-07-08T22:56:45-07:00 INFO     : Load hook config from '/hooks/kubesphere/schedule.sh'
2024-07-08T22:56:45-07:00 INFO     : Initializing schedule manager ...
2024-07-08T22:56:45-07:00 INFO     : KUBE Init Kubernetes client
2024-07-08T22:56:45-07:00 INFO     : KUBE-INIT Kubernetes client is configured successfully
2024-07-08T22:56:45-07:00 INFO     : MAIN: run main loop
2024-07-08T22:56:45-07:00 INFO     : MAIN: add onStartup tasks
2024-07-08T22:56:45-07:00 INFO     : Running schedule manager ...
2024-07-08T22:56:45-07:00 INFO     : QUEUE add all HookRun@OnStartup
2024-07-08T22:56:45-07:00 INFO     : MSTOR Create new metric shell_operator_live_ticks
2024-07-08T22:56:45-07:00 INFO     : MSTOR Create new metric shell_operator_tasks_queue_length
2024-07-08T22:56:45-07:00 INFO     : GVR for kind 'ClusterConfiguration' is installer.kubesphere.io/v1alpha1, Resource=clusterconfigurations
2024-07-08T22:56:45-07:00 INFO     : EVENT Kube event '907bc44c-7e20-4e05-94ae-cfcd810108a4'
2024-07-08T22:56:45-07:00 INFO     : QUEUE add TASK_HOOK_RUN@KUBE_EVENTS kubesphere/installRunner.py
2024-07-08T22:56:48-07:00 INFO     : TASK_RUN HookRun@KUBE_EVENTS kubesphere/installRunner.py
2024-07-08T22:56:48-07:00 INFO     : Running hook 'kubesphere/installRunner.py' binding 'KUBE_EVENTS' ...
2024-07-08T22:56:48.401-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [localhost] ***************************************************************

TASK [download : Generating images list] ***************************************
skipping: [localhost]

TASK [download : Synchronizing images] *****************************************

TASK [kubesphere-defaults : KubeSphere | Setting images' namespace override] ***
skipping: [localhost]

TASK [kubesphere-defaults : KubeSphere | Configuring defaults] *****************
ok: [localhost] => {
    "msg": "Check roles/kubesphere-defaults/defaults/main.yml"
}

TASK [preinstall : KubeSphere | Stopping if Kubernetes version is nonsupport] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [preinstall : KubeSphere | Checking StorageClass] *************************
changed: [localhost]

TASK [preinstall : KubeSphere | Stopping if StorageClass was not found] ********
skipping: [localhost]

TASK [preinstall : KubeSphere | Checking default StorageClass] *****************
changed: [localhost]

TASK [preinstall : KubeSphere | Stopping if default StorageClass was not found] ***
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [preinstall : KubeSphere | Checking KubeSphere component] *****************
changed: [localhost]

TASK [preinstall : KubeSphere | Getting KubeSphere component version] **********
skipping: [localhost] => (item=ks-openldap) 
skipping: [localhost] => (item=ks-redis) 
skipping: [localhost] => (item=ks-minio) 
skipping: [localhost] => (item=ks-openpitrix) 
skipping: [localhost] => (item=elasticsearch-logging) 
skipping: [localhost] => (item=elasticsearch-logging-curator) 
skipping: [localhost] => (item=istio) 
skipping: [localhost] => (item=istio-init) 
skipping: [localhost] => (item=jaeger-operator) 
skipping: [localhost] => (item=ks-jenkins) 
skipping: [localhost] => (item=ks-sonarqube) 
skipping: [localhost] => (item=logging-fluentbit-operator) 
skipping: [localhost] => (item=uc) 
skipping: [localhost] => (item=metrics-server) 

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=3    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [localhost] ***************************************************************

TASK [download : Generating images list] ***************************************
skipping: [localhost]

TASK [download : Synchronizing images] *****************************************

TASK [kubesphere-defaults : KubeSphere | Setting images' namespace override] ***
skipping: [localhost]

TASK [kubesphere-defaults : KubeSphere | Configuring defaults] *****************
ok: [localhost] => {
    "msg": "Check roles/kubesphere-defaults/defaults/main.yml"
}

TASK [Metrics-Server | Getting metrics-server installation files] **************
skipping: [localhost]

TASK [metrics-server : Metrics-Server | Creating manifests] ********************
skipping: [localhost] => (item={'file': 'metrics-server.yaml'}) 

TASK [metrics-server : Metrics-Server | Checking Metrics-Server] ***************
skipping: [localhost]

TASK [Metrics-Server | Uninstalling old metrics-server] ************************
skipping: [localhost]

TASK [Metrics-Server | Installing new metrics-server] **************************
skipping: [localhost]

TASK [metrics-server : Metrics-Server | Waitting for metrics.k8s.io ready] *****
skipping: [localhost]

TASK [Metrics-Server | Importing metrics-server status] ************************
skipping: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=1    changed=0    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [localhost] ***************************************************************

TASK [download : Generating images list] ***************************************
skipping: [localhost]

TASK [download : Synchronizing images] *****************************************

TASK [kubesphere-defaults : KubeSphere | Setting images' namespace override] ***
skipping: [localhost]

TASK [kubesphere-defaults : KubeSphere | Configuring defaults] *****************
ok: [localhost] => {
    "msg": "Check roles/kubesphere-defaults/defaults/main.yml"
}

TASK [common : KubeSphere | Checking kube-node-lease namespace] ****************
changed: [localhost]

TASK [common : KubeSphere | Getting system namespaces] *************************
ok: [localhost]

TASK [common : set_fact] *******************************************************
ok: [localhost]

TASK [common : debug] **********************************************************
ok: [localhost] => {
    "msg": [
        "kubesphere-system",
        "kubesphere-controls-system",
        "kubesphere-monitoring-system",
        "kubesphere-monitoring-federated",
        "kube-node-lease"
    ]
}

TASK [common : KubeSphere | Creating KubeSphere namespace] *********************
changed: [localhost] => (item=kubesphere-system)
changed: [localhost] => (item=kubesphere-controls-system)
changed: [localhost] => (item=kubesphere-monitoring-system)
changed: [localhost] => (item=kubesphere-monitoring-federated)
changed: [localhost] => (item=kube-node-lease)

TASK [common : KubeSphere | Labeling system-workspace] *************************
changed: [localhost] => (item=default)
changed: [localhost] => (item=kube-public)
changed: [localhost] => (item=kube-system)
changed: [localhost] => (item=kubesphere-system)
2024-07-08T22:56:53.747-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
changed: [localhost] => (item=kubesphere-controls-system)
changed: [localhost] => (item=kubesphere-monitoring-system)
changed: [localhost] => (item=kubesphere-monitoring-federated)
changed: [localhost] => (item=kube-node-lease)

TASK [common : KubeSphere | Labeling namespace for network policy] *************
changed: [localhost]

TASK [common : KubeSphere | Getting Kubernetes master num] *********************
changed: [localhost]

TASK [common : KubeSphere | Setting master num] ********************************
ok: [localhost]

TASK [KubeSphere | Getting common component installation files] ****************
changed: [localhost] => (item=common)

TASK [common : KubeSphere | Checking Kubernetes version] ***********************
changed: [localhost]

TASK [KubeSphere | Getting common component installation files] ****************
changed: [localhost] => (item=snapshot-controller)

TASK [common : KubeSphere | Creating snapshot controller values] ***************
changed: [localhost] => (item={'name': 'custom-values-snapshot-controller', 'file': 'custom-values-snapshot-controller.yaml'})

TASK [common : KubeSphere | Updating snapshot crd] *****************************
changed: [localhost]

TASK [common : KubeSphere | Deploying snapshot controller] *********************
changed: [localhost]

TASK [KubeSphere | Creating common component manifests] ************************
changed: [localhost] => (item={'path': 'redis', 'file': 'redis.yaml'})

TASK [common : KubeSphere | Generet Random password] ***************************
ok: [localhost]

TASK [common : KubeSphere | Creating Redis Password Secret] ********************
changed: [localhost]

TASK [common : KubeSphere | Getting redis installation files] ******************
skipping: [localhost] => (item=redis-ha) 

TASK [common : KubeSphere | Creating manifests] ********************************
skipping: [localhost] => (item={'name': 'custom-values-redis', 'file': 'custom-values-redis.yaml'}) 

TASK [common : KubeSphere | Checking old redis status] *************************
skipping: [localhost]

TASK [common : KubeSphere | Deleting and backup old redis svc] *****************
2024-07-08T22:56:59.131-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
skipping: [localhost]

TASK [common : KubeSphere | Deploying redis] ***********************************
skipping: [localhost]

TASK [common : KubeSphere | Deploying redis] ***********************************
changed: [localhost] => (item=redis.yaml)

TASK [common : KubeSphere | Importing redis status] ****************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=21   changed=15   unreachable=0    failed=0    skipped=8    rescued=0    ignored=0   
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [localhost] ***************************************************************

TASK [download : Generating images list] ***************************************
skipping: [localhost]

TASK [download : Synchronizing images] *****************************************

TASK [kubesphere-defaults : KubeSphere | Setting images' namespace override] ***
skipping: [localhost]

TASK [kubesphere-defaults : KubeSphere | Configuring defaults] *****************
ok: [localhost] => {
    "msg": "Check roles/kubesphere-defaults/defaults/main.yml"
}

TASK [ks-core/init-token : KubeSphere | Creating KubeSphere directory] *********
ok: [localhost]

TASK [ks-core/init-token : KubeSphere | Getting installation init files] *******
changed: [localhost] => (item=jwt-script)

TASK [ks-core/init-token : KubeSphere | Creating KubeSphere Secret] ************
changed: [localhost]

TASK [ks-core/init-token : KubeSphere | Creating KubeSphere Secret] ************
ok: [localhost]

TASK [ks-core/init-token : KubeSphere | Creating KubeSphere Secret] ************
skipping: [localhost]

TASK [ks-core/init-token : KubeSphere | Enabling Token Script] *****************
changed: [localhost]

TASK [ks-core/init-token : KubeSphere | Getting KubeSphere Token] **************
changed: [localhost]

TASK [ks-core/init-token : KubeSphere | Checking KubeSphere secrets] ***********
changed: [localhost]

TASK [ks-core/init-token : KubeSphere | Deleting KubeSphere secret] ************
skipping: [localhost]

TASK [ks-core/init-token : KubeSphere | Creating components token] *************
changed: [localhost]

TASK [ks-core/ks-core : KubeSphere | Setting Kubernetes version] ***************
ok: [localhost]

TASK [ks-core/ks-core : KubeSphere | Getting Kubernetes master num] ************
changed: [localhost]

TASK [ks-core/ks-core : KubeSphere | Setting master num] ***********************
ok: [localhost]

TASK [ks-core/ks-core : KubeSphere | Override master num] **********************
skipping: [localhost]

TASK [ks-core/ks-core : KubeSphere | Setting enableHA] *************************
ok: [localhost]

TASK [ks-core/ks-core : KubeSphere | Checking ks-core Helm Release] ************
changed: [localhost]

TASK [ks-core/ks-core : KubeSphere | Checking ks-core Exsit] *******************
changed: [localhost]

TASK [ks-core/ks-core : KubeSphere | Convert ks-core to helm mananged] *********
skipping: [localhost] => (item={'ns': 'kubesphere-controls-system', 'kind': 'serviceaccounts', 'resource': 'kubesphere-cluster-admin', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-controls-system', 'kind': 'serviceaccounts', 'resource': 'kubesphere-router-serviceaccount', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-controls-system', 'kind': 'role', 'resource': 'system:kubesphere-router-role', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-controls-system', 'kind': 'rolebinding', 'resource': 'nginx-ingress-role-nisa-binding', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-controls-system', 'kind': 'deployment', 'resource': 'default-http-backend', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-controls-system', 'kind': 'service', 'resource': 'default-http-backend', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'secrets', 'resource': 'ks-controller-manager-webhook-cert', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'serviceaccounts', 'resource': 'kubesphere', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'configmaps', 'resource': 'ks-router-config', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'configmaps', 'resource': 'sample-bookinfo', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'clusterroles', 'resource': 'system:kubesphere-router-clusterrole', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'clusterrolebindings', 'resource': 'system:nginx-ingress-clusterrole-nisa-binding', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'clusterrolebindings', 'resource': 'system:kubesphere-cluster-admin', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'clusterrolebindings', 'resource': 'kubesphere', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'services', 'resource': 'ks-apiserver', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'services', 'resource': 'ks-controller-manager', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'deployments', 'resource': 'ks-apiserver', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'deployments', 'resource': 'ks-controller-manager', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'validatingwebhookconfigurations', 'resource': 'users.iam.kubesphere.io', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'validatingwebhookconfigurations', 'resource': 'resourcesquotas.quota.kubesphere.io', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'validatingwebhookconfigurations', 'resource': 'network.kubesphere.io', 'release': 'ks-core'}) 
skipping: [localhost] => (item={'ns': 'kubesphere-system', 'kind': 'users.iam.kubesphere.io', 'resource': 'admin', 'release': 'ks-core'}) 

TASK [ks-core/ks-core : KubeSphere | Patch admin user] *************************
skipping: [localhost]

TASK [ks-core/ks-core : KubeSphere | Getting ks-core helm charts] **************
2024-07-08T22:57:04.450-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:57:09.787-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
changed: [localhost] => (item=ks-core-config)
changed: [localhost] => (item=ks-core)

TASK [ks-core/ks-core : KubeSphere | Creating manifests] ***********************
changed: [localhost] => (item={'path': 'ks-core', 'file': 'custom-values-ks-core.yaml'})

TASK [ks-core/ks-core : KubeSphere | Upgrade CRDs] *****************************
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/tenant.kubesphere.io_workspaces.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/storage.kubesphere.io_storageclasseraccessor.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/network.kubesphere.io_ipamhandles.yaml)
2024-07-08T22:57:15.162-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_federatedrolebindings.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/application.kubesphere.io_helmreleases.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/servicemesh.kubesphere.io_servicepolicies.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/cluster.kubesphere.io_clusters.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/network.kubesphere.io_ippools.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_rolebases.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_loginrecords.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/network.kubesphere.io_ipamblocks.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/gateway.kubesphere.io_nginxes.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/gateway.kubesphere.io_gateways.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_workspaceroles.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/network.kubesphere.io_namespacenetworkpolicies.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_federatedroles.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/tenant.kubesphere.io_workspacetemplates.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/application.kubesphere.io_helmapplications.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/servicemesh.kubesphere.io_strategies.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/quota.kubesphere.io_resourcequotas.yaml)
2024-07-08T22:57:20.554-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_groups.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/application.kubesphere.io_helmrepos.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/app_v1beta1_application.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_workspacerolebindings.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_globalrolebindings.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_users.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/application.kubesphere.io_helmapplicationversions.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_groupbindings.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_globalroles.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/application.kubesphere.io_helmcategories.yaml)
changed: [localhost] => (item=/kubesphere/kubesphere/ks-core-config/crds/iam.kubesphere.io_federatedusers.yaml)

TASK [ks-core/ks-core : KubeSphere | Creating ks-core-config] ******************
changed: [localhost]

TASK [ks-core/ks-core : KubeSphere | Creating ks-core] *************************
2024-07-08T22:57:25.907-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
changed: [localhost]

TASK [ks-core/ks-core : KubeSphere | Importing ks-core status] *****************
changed: [localhost]

TASK [ks-core/prepare : KubeSphere | Checking core components (1)] *************
changed: [localhost]

TASK [ks-core/prepare : KubeSphere | Checking core components (2)] *************
changed: [localhost]

TASK [ks-core/prepare : KubeSphere | Checking core components (3)] *************
skipping: [localhost]

TASK [ks-core/prepare : KubeSphere | Checking core components (4)] *************
skipping: [localhost]

TASK [ks-core/prepare : KubeSphere | Updating ks-core status] ******************
skipping: [localhost]

TASK [ks-core/prepare : set_fact] **********************************************
skipping: [localhost]

TASK [ks-core/prepare : KubeSphere | Creating KubeSphere directory] ************
ok: [localhost]

TASK [ks-core/prepare : KubeSphere | Getting installation init files] **********
changed: [localhost] => (item=ks-init)

TASK [ks-core/prepare : KubeSphere | Initing KubeSphere] ***********************
changed: [localhost] => (item=role-templates.yaml)

TASK [ks-core/prepare : KubeSphere | Generating kubeconfig-admin] **************
skipping: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=26   changed=19   unreachable=0    failed=0    skipped=13   rescued=0    ignored=0   
Start installing monitoring
Start installing multicluster
Start installing openpitrix
Start installing network
**************************************************
Waiting for all tasks to be completed ...
2024-07-08T22:57:31.232-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
task network status is successful  (1/4)
task openpitrix status is successful  (2/4)
task multicluster status is successful  (3/4)
2024-07-08T22:57:36.584-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:57:41.952-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:57:47.289-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:57:52.607-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:57:57.949-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:03.257-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:08.594-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:13.974-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:19.314-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
task monitoring status is successful  (4/4)
**************************************************
Collecting installation results ...
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [localhost] ***************************************************************

TASK [download : Generating images list] ***************************************
skipping: [localhost]

TASK [download : Synchronizing images] *****************************************

TASK [kubesphere-defaults : KubeSphere | Setting images' namespace override] ***
skipping: [localhost]

TASK [kubesphere-defaults : KubeSphere | Configuring defaults] *****************
ok: [localhost] => {
    "msg": "Check roles/kubesphere-defaults/defaults/main.yml"
}

TASK [ks-core/config : KubeSphere | Getting sonarqube host] ********************
changed: [localhost]

TASK [ks-core/config : KubeSphere | Getting sonarqube token] *******************
changed: [localhost]

TASK [ks-core/config : set_fact] ***********************************************
skipping: [localhost]

TASK [ks-core/config : set_fact] ***********************************************
skipping: [localhost]

TASK [ks-core/config : KubeSphere | Getting es index prefix] *******************
changed: [localhost]

TASK [ks-core/config : set_fact] ***********************************************
skipping: [localhost]

TASK [ks-core/config : KubeSphere | Getting token] *****************************
changed: [localhost]

TASK [ks-core/config : KubeSphere | Getting ks-secret] *************************
changed: [localhost]

TASK [ks-core/config : debug] **************************************************
ok: [localhost] => {
    "msg": "Current Kubernetes version is v1.22.16+k3s1"
}

TASK [ks-core/config : KubeSphere | Setting kubectl image version] *************
ok: [localhost] => (item={'key': 'v1.22.0', 'value': 'v1.22.0'})
skipping: [localhost] => (item={'key': 'v1.21.0', 'value': 'v1.21.0'}) 
skipping: [localhost] => (item={'key': 'v1.20.0', 'value': 'v1.20.0'}) 
skipping: [localhost] => (item={'key': 'v1.19.0', 'value': 'v1.19.1'}) 
skipping: [localhost] => (item={'key': 'v1.18.0', 'value': 'v1.18.0'}) 
skipping: [localhost] => (item={'key': 'v1.17.0', 'value': 'v1.17.0'}) 
skipping: [localhost] => (item={'key': 'v1.16.0', 'value': 'v1.16.0'}) 
skipping: [localhost] => (item={'key': 'v1.15.0', 'value': 'v1.0.0'}) 

TASK [ks-core/config : debug] **************************************************
ok: [localhost] => {
    "msg": "Current kubectl image version is v1.22.0"
}

TASK [ks-core/config : KubeSphere | Getting Kubernetes master num] *************
changed: [localhost]

TASK [ks-core/config : KubeSphere | Setting master num] ************************
ok: [localhost]

TASK [ks-core/config : KubeSphere | Creating manifests] ************************
changed: [localhost] => (item={'name': 'kubesphere-config', 'file': 'kubesphere-config.yaml', 'type': 'cm'})

TASK [ks-core/config : KubeSphere | Initing KubeSphere] ************************
changed: [localhost] => (item=kubesphere-config.yaml)

TASK [ks-core/config : OpenPitrix | Getting openpitrix jobs installation files] ***
skipping: [localhost] => (item=openpitrix) 

TASK [ks-core/config : OpenPitrix | Creating openpitrix jobs manifests] ********
skipping: [localhost] => (item={'path': 'openpitrix', 'file': 'ks-openpitrix-upgrade.yaml'}) 

TASK [ks-core/config : OpenPitrix | Upgrade OpenPitrix] ************************
skipping: [localhost]

TASK [ks-core/config : OpenPitrix | Delete namespace openpitrix-system] ********
skipping: [localhost]

TASK [ks-core/config : Alerting | Checking status v3.0.0] **********************
changed: [localhost]

TASK [ks-core/config : Alerting | Getting migration files] *********************
skipping: [localhost] => (item=alerting-migration) 

TASK [ks-core/config : Alerting | Getting migration files] *********************
skipping: [localhost] => (item={'path': 'alerting-migration', 'file': 'ks-alerting-migration.yaml'}) 

TASK [ks-core/config : Alerting | Creating migration job] **********************
skipping: [localhost]

TASK [ks-core/config : Alerting | Getting migration job status] ****************
skipping: [localhost]

TASK [ks-core/config : Alerting | Getting migration job status] ****************
skipping: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=14   changed=9    unreachable=0    failed=0    skipped=15   rescued=0    ignored=0   
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [localhost] ***************************************************************

TASK [download : Generating images list] ***************************************
skipping: [localhost]

TASK [download : Synchronizing images] *****************************************

TASK [kubesphere-defaults : KubeSphere | Setting images' namespace override] ***
skipping: [localhost]

TASK [kubesphere-defaults : KubeSphere | Configuring defaults] *****************
ok: [localhost] => {
    "msg": "Check roles/kubesphere-defaults/defaults/main.yml"
}

TASK [ks-core/config : KubeSphere | Getting sonarqube host] ********************
changed: [localhost]

TASK [ks-core/config : KubeSphere | Getting sonarqube token] *******************
changed: [localhost]

TASK [ks-core/config : set_fact] ***********************************************
skipping: [localhost]

TASK [ks-core/config : set_fact] ***********************************************
skipping: [localhost]

TASK [ks-core/config : KubeSphere | Getting es index prefix] *******************
changed: [localhost]

TASK [ks-core/config : set_fact] ***********************************************
2024-07-08T22:58:24.689-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
skipping: [localhost]

TASK [ks-core/config : KubeSphere | Getting token] *****************************
changed: [localhost]

TASK [ks-core/config : KubeSphere | Getting ks-secret] *************************
changed: [localhost]

TASK [ks-core/config : debug] **************************************************
ok: [localhost] => {
    "msg": "Current Kubernetes version is v1.22.16+k3s1"
}

TASK [ks-core/config : KubeSphere | Setting kubectl image version] *************
ok: [localhost] => (item={'key': 'v1.22.0', 'value': 'v1.22.0'})
skipping: [localhost] => (item={'key': 'v1.21.0', 'value': 'v1.21.0'}) 
skipping: [localhost] => (item={'key': 'v1.20.0', 'value': 'v1.20.0'}) 
skipping: [localhost] => (item={'key': 'v1.19.0', 'value': 'v1.19.1'}) 
skipping: [localhost] => (item={'key': 'v1.18.0', 'value': 'v1.18.0'}) 
skipping: [localhost] => (item={'key': 'v1.17.0', 'value': 'v1.17.0'}) 
skipping: [localhost] => (item={'key': 'v1.16.0', 'value': 'v1.16.0'}) 
skipping: [localhost] => (item={'key': 'v1.15.0', 'value': 'v1.0.0'}) 

TASK [ks-core/config : debug] **************************************************
ok: [localhost] => {
    "msg": "Current kubectl image version is v1.22.0"
}

TASK [ks-core/config : KubeSphere | Getting Kubernetes master num] *************
changed: [localhost]

TASK [ks-core/config : KubeSphere | Setting master num] ************************
ok: [localhost]

TASK [ks-core/config : KubeSphere | Creating manifests] ************************
ok: [localhost] => (item={'name': 'kubesphere-config', 'file': 'kubesphere-config.yaml', 'type': 'cm'})

TASK [ks-core/config : KubeSphere | Initing KubeSphere] ************************
changed: [localhost] => (item=kubesphere-config.yaml)

TASK [ks-core/config : OpenPitrix | Getting openpitrix jobs installation files] ***
skipping: [localhost] => (item=openpitrix) 

TASK [ks-core/config : OpenPitrix | Creating openpitrix jobs manifests] ********
skipping: [localhost] => (item={'path': 'openpitrix', 'file': 'ks-openpitrix-upgrade.yaml'}) 

TASK [ks-core/config : OpenPitrix | Upgrade OpenPitrix] ************************
skipping: [localhost]

TASK [ks-core/config : OpenPitrix | Delete namespace openpitrix-system] ********
skipping: [localhost]

TASK [ks-core/config : Alerting | Checking status v3.0.0] **********************
changed: [localhost]

TASK [ks-core/config : Alerting | Getting migration files] *********************
skipping: [localhost] => (item=alerting-migration) 

TASK [ks-core/config : Alerting | Getting migration files] *********************
skipping: [localhost] => (item={'path': 'alerting-migration', 'file': 'ks-alerting-migration.yaml'}) 

TASK [ks-core/config : Alerting | Creating migration job] **********************
skipping: [localhost]

TASK [ks-core/config : Alerting | Getting migration job status] ****************
skipping: [localhost]

TASK [ks-core/config : Alerting | Getting migration job status] ****************
skipping: [localhost]

TASK [check-result : ks-devops | Getting ks-sonarqube NodeIp] ******************
changed: [localhost]

TASK [check-result : KubeSphere | Waiting for ks-apiserver] ********************
FAILED - RETRYING: KubeSphere | Waiting for ks-apiserver (30 retries left).
2024-07-08T22:58:30.026-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:35.387-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:40.722-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:46.050-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:51.390-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:58:56.725-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
FAILED - RETRYING: KubeSphere | Waiting for ks-apiserver (29 retries left).
2024-07-08T22:59:02.057-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:59:07.403-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:59:12.774-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:59:18.158-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
2024-07-08T22:59:23.490-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running" 
ls: /kubesphere/playbooks/kubesphere_running: No such file or directory
command terminated with exit code 1: Process exited with status 1
changed: [localhost]

TASK [check-result : KubeSphere | Importing ks-core status] ********************
changed: [localhost]

TASK [check-result : KubeSphere | Creating info_file] **************************
changed: [localhost -> localhost] => (item={'name': 'welcome', 'file': 'kubesphere_running', 'type': 'info'})

PLAY RECAP *********************************************************************
localhost                  : ok=18   changed=12   unreachable=0    failed=0    skipped=15   rescued=0    ignored=0   
#####################################################
###              Welcome to KubeSphere!           ###
#####################################################

NOTES：
  1. After you log into the console, please check the
     monitoring status of service components in
     "Cluster Management". If any service is not
     ready, please wait patiently until all components 
     are up and running.
  2. Please change the default password after login.

#####################################################
https://kubesphere.io             2024-07-08 22:59:27
#####################################################

2024-07-08T22:59:29.154-0700	[A] zhaoyu: CheckKsInstallerResult success (5m46.434667222s)
2024-07-08T22:59:29.154-0700	close connection zhaoyu
2024-07-08T22:59:29.154-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -f > /tmp/.ks-installer.log", ERROR: Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -f > /tmp/.ks-installer.log" 
: wait: remote command exited without exit status or exit signal
2024-07-08T22:59:29.154-0700	[Job] Install Terminus execute successfully!!! (7m13.089572949s)
tail log:  , [Failed to exec command: sudo -E /bin/bash -c "/usr/local/bin/kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -f > /tmp/.ks-installer.log" 
: wait: remote command exited without exit status or exit signal]Installation is complete.
	
	Please check the result using the command:
	
		kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l 'app in (ks-install, ks-installer)' -o jsonpath='{.items[0].metadata.name}') -f   
	
	2024-07-08T22:59:34.158-0700	[exec] zhaoyu CMD: sudo -E /bin/bash -c "/usr/local/bin/kubectl exec -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}') -- ls /kubesphere/playbooks/kubesphere_running", ERROR: failed to get SSH session: connection closed
